import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {
    static boolean checkProcessed(int n, int[] ar) {
        if(ar.length <1 ){
            return false;
        }else {
            for(int i=0;i<ar.length;i++){
                if(n==ar[i]){
                   return true;
                }
            }
        }
        return false;

    }

    // Complete the sockMerchant function below.
    static int sockMerchant(int n, int[] ar) {
        int[] processed =new int[n]; 
        int count=0;
        int index=0;
        int pairOfSocks=0;
            for(int i=0;i<ar.length;i++){
                boolean exist = checkProcessed(ar[i],processed);
                for(int j=0;j<ar.length;j++){
                    if(ar[j]==ar[i] && !exist){
                        count++;
                        System.out.println("My array "+ar[i]+" and count = "+count);
                    }

                }
                if(count >  1 && count %2==0){
                    pairOfSocks += count/2;
                }else if(count > 1 && count %2 !=0){
                    count = count-1;
                    pairOfSocks += count/2;
                }
                processed[index] = ar[i];
                index++;
                count=0;
            }
            return pairOfSocks;

    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] ar = new int[n];

        String[] arItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int arItem = Integer.parseInt(arItems[i]);
            ar[i] = arItem;
        }

        int result = sockMerchant(n, ar);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
